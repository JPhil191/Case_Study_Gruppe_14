read.csv("Data/Einzelteil/Einzelteil_T04.csv")
glimpse(Einzelteil_T04)
head(Einzelteil_T04)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
head(Einzelteil_T04)
Einzelteil_T04 <- read.csv("Data/Einzelteil/Einzelteil_T04.csv")
glimpse(Einzelteil_T04)
str(Einzelteil_T04)
Einzelteil_T38 <- read.csv("Data/Einzelteil/Einzelteil_T38.csv")
str(Einzelteil_T38)
Bestandteile_Fahrzeuge_OEM1_Typ11 <- read.csv("Data/Fahrezeug/Bestandteile_Fahrzeuge_OEM1_Typ11.csv")
Bestandteile_Fahrzeuge_OEM1_Typ11 <- read.csv("Data/Fahrezeug/Bestandteile_Fahrzeuge_OEM1_Typ11.csv")
Bestandteile_Fahrzeuge_OEM1_Typ11 <- read.csv("/Data/Fahrezeug/Bestandteile_Fahrzeuge_OEM1_Typ11.csv")
Bestandteile_Fahrzeuge_OEM1_Typ11 <- read.csv("/Data/Fahrezeug/Bestandteile_Fahrzeuge_OEM1_Typ12.csv")
Bestandteile_Fahrzeuge_OEM1_Typ11 <- read.csv("Data/Fahrezeug/Bestandteile_Fahrzeuge_OEM1_Typ12.csv")
Bestandteile_Fahrzeuge_OEM1_Typ11 <- read.csv("Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM1_Typ11.csv")
str(Bestandteile_Fahrzeuge_OEM1_Typ11)
help("read.csv")
Bestandteile_Fahrzeuge_OEM1_Typ11 <- read.csv("Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM1_Typ11.csv", sep = ";")
str(Bestandteile_Fahrzeuge_OEM1_Typ11)
Fahrzeuge_OEM1_Typ12 <- read.csv("Data/Fahrzeuge/Fahrzeuge_OEM1_Typ12.csv")
Fahrzeuge_OEM1_Typ12 <- read.csv("Data/Fahrzeuge/Fahrzeuge_OEM1_Typ12.csv")
Fahrzeuge_OEM1_Typ12 <- read.csv("Data/Fahrzeug/Fahrzeuge_OEM1_Typ12.csv")
str(Fahrzeuge_OEM1_Typ12)
Fahrzeuge_OEM1_Typ12 <- read.csv("Data/Fahrzeug/Fahrzeuge_OEM1_Typ12.csv", sep = ";")
str(Fahrzeuge_OEM1_Typ12)
Komponente_K4 <- read.csv("Data/Komponente/Komponente_K4.csv")
str(Komponente_K4)
Komponente_K4 <- read.csv("Data/Komponente/Komponente_K4.csv", sep = ";")
str(Komponente_K4)
glimpse(Einzelteil_T38)
Bestandteile_Komponente_K1_BE1 <- read.csv("Data/Komponente/Bestandteile_Komponente_K1_BE1.csv")
Bestandteile_Komponente_K1BE1 <- read.csv("Data/Komponente/Bestandteile_Komponente_K1BE1.csv")
str(Bestandteile_Komponente_K1BE1)
Bestandteile_Komponente_K1BE1 <- read.csv("Data/Komponente/Bestandteile_Komponente_K1BE1.csv", sep = ";")
str(Bestandteile_Komponente_K1BE1)
Komponente_K1BE1 <- read.csv("Data/Komponente/Komponente_K1BE1.csv", sep = ";")
str(Komponente_K1BE1)
Komponente_K1BE1 <- read.csv("Data/Komponente/Komponente_K1BE1.csv", sep = ",")
str(Komponente_K1BE1)
Komponente_K1BE2 <- read.csv("Data/Komponente/Komponente_K1BE2.csv", sep = ",")
str(Komponente_K1BE2)
Komponente_K1BE2 <- read.csv("Data/Komponente/Komponente_K1BE2.csv", sep = ";")
str(Komponente_K1BE2)
Komponente_K2ST2 <- read.csv("Data/Komponente/Komponente_K2ST2.csv")
str(Komponente_K2ST2)
Komponente_K2ST2 <- read.csv("Data/Komponente/Komponente_K2ST2.csv", sep = ";")
str(Komponente_K2ST2)
str(Fahrzeuge_OEM1_Typ12)
str(Bestandteile_Fahrzeuge_OEM1_Typ11)
str(Komponente_K4)
Komponente_K1DI1 <- read.csv("Data/Komponente/Komponente_K1DI1.csv" sep = "")
,
Komponente_K1DI1 <- read.csv("Data/Komponente/Komponente_K1DI1.csv", sep = "")
str(Komponente_K1DI1)
Komponente_K1DI1 <- read.csv("Data/Komponente/Komponente_K1DI1.csv", sep = ",")
str(Komponente_K1DI1)
str(Komponente_K1BE1)
str(Bestandteile_Komponente_K1BE1)
library(readr)
Tier2_Werke_2017_07_11_v1_2_TrR <- read_csv("Data/Geodaten/Tier2_Werke_2017-07-11_v1.2_TrR.csv")
str(Tier2_Werke_2017_07_11_v1_2_TrR)
str(Tier2_Werke_2017_07_11_v1_2_TrR)
Tier2_Werke_2017_07_11_v1_2_TrR <- read_csv("Data/Geodaten/Tier2_Werke_2017-07-11_v1.2_TrR.csv")
Tier2_Werke_2017_07_11_v1_2_TrR <- read.csv("Data/Geodaten/Tier2_Werke_2017-07-11_v1.2_TrR.csv")
Tier2_Werke_2017_07_11_v1_2_TrR <- read.csv("Data/Geodaten/Tier2_Werke_2017-07-11_v1.2_TrR.csv")
Tier1_Werke_2017_07_11_v1_2_TrR <- read.csv("Data/Geodaten/Tier1_Werke_2017-07-11_v1.2_TrR.csv")
Tier1_Werke_2017_07_11_v1_2_TrR <- read.csv("Data/Geodaten/Tier1_Werke_2017-07-11_v1.2_TrR.csv", sep =";")
library(tidyverse)
Tier1_Werke_2017_07_11_v1_2_TrR <- read.csv("Data/Geodaten/Tier1_Werke_2017-07-11_v1.2_TrR.csv", sep =";")
Komponente_K1DI1 <- read.csv("Data/Komponente/Komponente_K1DI1.csv", sep = ",")
Tier1_Werke_2017_07_11_v1_2_TrR <- read.csv("Data/Geodaten/Tier1_Werke_2017-07-11_v1.2_TrR.csv", sep =";")
str(Tier1_Werke_2017_07_11_v1_2_TrR)
str(Fahrzeuge_OEM1_Typ12)
Fehleranalyse_daten <- read.csv("Data/Fahrzeug/Fahhrzeug_OEM1_Typ11_Fehleranalyse.csv")
Fehleranalyse_daten <- read.csv("Data/Fahrzeug/Fahrzeug_OEM1_Typ11_Fehleranalyse.csv")
Fehleranalyse_daten <- read.csv("Data/Fahrzeug/Fahrzeuge_OEM1_Typ11_Fehleranalyse.csv")
str(Fehleranalyse_daten)
head(Einzelteil_T38)
help(order)
help("order")
Einzelteil_T04[oder(Fehlerhaft_Fahrleistung.x),]
Einzelteil_T04[order(Fehlerhaft_Fahrleistung.x),]
help("arrange")
arrange(Einzelteil_T38, desc(Fehlerhaft_Fahhrleistung.x))
arrange(Einzelteil_T38, desc(Fehlerhaft_Fahrleistung.x))
usethis::use_git()
install.packages("usethis")
usethis::use_git()
git commit
gut pull
git
help("list.files")
help("read.delim")
Geodata_files
Geodaten_Filenames
print(Geodaten_Filenames)
Geodaten_Filenames
geodaten_filenames
print(geodaten_filenames)
print(geodaten_filenames)
geodaten_filenames = list.files(path = path_Geodaten, pattern = "*.csv")
path_Geodaten = file.path("Data", "Geodaten")
geodaten_filenames = list.files(path = path_Geodaten, pattern = "*.csv")
print(geodaten_filenames)
#Defining the different Data Paths
path_Fahrzeug <- file.path("Data", "Fahrzeug")
path_Komponente <- file.path("Data", "Komponente")
path_Einzelteil <- file.path("Data", "Einzelteil")
path_Geodaten <- file.path("Data", "Geodaten")
geodaten_filenames <- list.files(path = path_Geodaten, pattern = "*.csv")
print(geodaten_filenames)
source("~/Documents/TU Berlin aktuelles Semester (6)/IDA Case Study/Case_Study_Gruppe_14/Case_Study_App_14.R", echo=TRUE)
source("~/Documents/TU Berlin aktuelles Semester (6)/IDA Case Study/Case_Study_Gruppe_14/Case_Study_App_14.R", echo=TRUE)
source("~/Documents/TU Berlin aktuelles Semester (6)/IDA Case Study/Case_Study_Gruppe_14/Case_Study_App_14.R", echo=TRUE)
#Defining the different Data Paths
path_Fahrzeug <- file.path("Data", "Fahrzeug")
path_Komponente <- file.path("Data", "Komponente")
path_Einzelteil <- file.path("Data", "Einzelteil")
path_Geodaten <- file.path("Data", "Geodaten")
geodaten_filenames <- list.files(path = path_Geodaten, pattern = "*.csv")
print(geodaten_filenames)
path_Fahrzeug <- file.path("Data", "Fahrzeug")
path_Komponente <- file.path("Data", "Komponente")
path_Einzelteil <- file.path("Data", "Einzelteil")
path_Geodaten <- file.path("Data", "Geodaten")
geodaten_filenames <- list.files(path = path_Geodaten, pattern = "*.csv")
print(geodaten_filenames)
library(tidyverse)
#Importing Data
#Defining the different Data Paths
path_Fahrzeug <- file.path("Data", "Fahrzeug")
path_Komponente <- file.path("Data", "Komponente")
path_Einzelteil <- file.path("Data", "Einzelteil")
path_Geodaten <- file.path("Data", "Geodaten")
geodaten_filenames <- list.files(path = path_Geodaten, pattern = "*.csv")
print(geodaten_filenames)
print(geodaten_filenames)
library(tidyverse)
#Importing Data
#Defining the different Data Paths
path_Fahrzeug <- file.path("Data", "Fahrzeug")
path_Komponente <- file.path("Data", "Komponente")
path_Einzelteil <- file.path("Data", "Einzelteil")
path_Geodaten <- file.path("Data", "Geodaten")
geodaten_filenames <- list.files(path = path_Geodaten, pattern = "*.csv")
all_csv <- lapply(my_files,read.csv,sep = ";")
library(tidyverse)
#Importing Data
#Defining the different Data Paths
path_Fahrzeug <- file.path("Data", "Fahrzeug")
path_Komponente <- file.path("Data", "Komponente")
path_Einzelteil <- file.path("Data", "Einzelteil")
path_Geodaten <- file.path("Data", "Geodaten")
geodaten_filenames <- list.files(path = path_Geodaten, pattern = "*.csv")
all_csv <- lapply(geodaten_filenames,read.csv,sep = ";")
library(tidyverse)
#Importing Data
#Defining the different Data Paths
path_Fahrzeug <- file.path("Data", "Fahrzeug")
path_Komponente <- file.path("Data", "Komponente")
path_Einzelteil <- file.path("Data", "Einzelteil")
path_Geodaten <- file.path("Data", "Geodaten")
geodaten_filenames <- list.files(path = path_Geodaten, pattern = "*.csv")
all_csv <- lapply(geodaten_filenames,read.csv, file = path_Geodaten + "/" + geodaten_filenames, sep = ";")
library(tidyverse)
library(fs)
library(stringr)
library(data.table)
# 1.0 Importing Data ----
# 1.1 Getting all the File Paths ----
Geodaten_paths <- fs::dir_ls("Data/Geodaten", glob = "*.csv")
Fahrzeug_paths <- fs::dir_ls("Data/Fahrzeug", glob = "*OEM1*")
#TODO Remove Fehleranalyse from List
Komponente_paths <- fs::dir_ls("Data/Komponente", glob = "*K1*|*K3*")
Motor_Teile_IDs <- sprintf('%0.2d', 2:10)
Schaltung_Teile_IDs <- 21:27
Relevante_Teile_IDs <- c(Motor_Teile_IDs, Schaltung_Teile_IDs)
Einzelteilfilter <- ""
for (ID in Relevante_Teile_IDs) {
Einzelteilfilter <- paste(Einzelteilfilter, "*", toString(ID), "*|", sep="")
}
Einzelteilfilter <- str_sub(Einzelteilfilter, end = -2)
Einzelteil_paths <- fs::dir_ls("Data/Einzelteil", glob = Einzelteilfilter)
Zulassungen_paths <- fs::dir_ls("Data/Zulassungen")
# 1.2 Importing the Data from their directories and naming them
Geodaten_all <- list()
Fahrzeugdaten_all <- list()
Komponentendaten_all <- list()
Einzelteildaten_all <- list()
#TODO function für die ganzen for loops schreiben und lapply anwenden
#weil schöner
for (i in seq_along(Geodaten_paths)) {
Geodaten_all[[i]] <- fread(Geodaten_paths[[i]])
}
Geodaten_all <- set_names(Geodaten_all, str_sub(Geodaten_paths, start = 15, end = -5))
for (i in seq_along(Fahrzeug_paths)) {
Fahrzeugdaten_all[[i]] <- fread(Fahrzeug_paths[[i]], header=TRUE)
#(rbind.data.frame, Fahrzeugdaten_all[[i]])
}
Fahrzeugdaten_all <- set_names(Fahrzeugdaten_all, str_sub(Fahrzeug_paths, start = 15, end = -5))
View(Fahrzeugdaten_all)
Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"]
head(Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"])
glimpse(Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"])
class(Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"])
Fahrzeug_Daten <- Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"]
class(Fahrzeug_Daten)
summary(Fahrzeug_Daten)
library(tidyverse)
library(fs)
library(stringr)
library(data.table)
# 1.0 Importing Data ----
# 1.1 Getting all the File Paths ----
Geodaten_paths <- fs::dir_ls("Data/Geodaten", glob = "*.csv")
Fahrzeug_paths <- fs::dir_ls("Data/Fahrzeug", glob = "*OEM1*")
#TODO Remove Fehleranalyse from List
Komponente_paths <- fs::dir_ls("Data/Komponente", glob = "*K1*|*K3*")
Motor_Teile_IDs <- sprintf('%0.2d', 2:10)
Schaltung_Teile_IDs <- 21:27
Relevante_Teile_IDs <- c(Motor_Teile_IDs, Schaltung_Teile_IDs)
Einzelteilfilter <- ""
for (ID in Relevante_Teile_IDs) {
Einzelteilfilter <- paste(Einzelteilfilter, "*", toString(ID), "*|", sep="")
}
Einzelteilfilter <- str_sub(Einzelteilfilter, end = -2)
Einzelteil_paths <- fs::dir_ls("Data/Einzelteil", glob = Einzelteilfilter)
Zulassungen_paths <- fs::dir_ls("Data/Zulassungen")
# 1.2 Importing the Data from their directories and naming them
Geodaten_all <- list()
Fahrzeugdaten_all <- list()
Komponentendaten_all <- list()
Einzelteildaten_all <- list()
#TODO function für die ganzen for loops schreiben und lapply anwenden
#weil schöner
for (i in seq_along(Geodaten_paths)) {
Geodaten_all[[i]] <- fread(Geodaten_paths[[i]])
}
Geodaten_all <- set_names(Geodaten_all, str_sub(Geodaten_paths, start = 15, end = -5))
for (i in seq_along(Fahrzeug_paths)) {
Fahrzeugdaten_all[[i]] <- as.data.frame(fread(Fahrzeug_paths[[i]], header=TRUE))
#(rbind.data.frame, Fahrzeugdaten_all[[i]])
}
Fahrzeugdaten_all <- set_names(Fahrzeugdaten_all, str_sub(Fahrzeug_paths, start = 15, end = -5))
View(Fahrzeugdaten_all)
class(Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"])
Fahrzeug_Daten <- Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"]
summary(Fahrzeug_Daten)
glimpse(Fahrzeug_Daten)
convert_column_to_binary_factor <- function(data, column_name) {
data <- data %>%
mutate(faulty_factor = as.factor(column_name))
}
convert_column_to_binary_factor(Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"], "Fehlerhaft")
Fahrzeug_Daten <- Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"]
convert_column_to_binary_factor(Fahrzeug_Daten, "Fehlerhaft")
Fahrzeug_Daten <- Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"]
convert_column_to_binary_factor(as.data.frame(Fahrzeug_Daten), "Fehlerhaft")
Glimpse(Fahrzeug_Daten)
glimpse(Fahrzeug_Daten)
glimpse data
glimpse(data)
convert_column_to_binary_factor <- function(data, column_name) {
data <- data %>%
mutate(faulty_factor = as.factor(column_name))
return(data)
}
Fahrzeug_Daten <- Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"]
Fahrzeug_Daten <- convert_column_to_binary_factor(as.data.frame(Fahrzeug_Daten), "Fehlerhaft")
glimpse(Fahrzeug_Daten)
head(Fahrzeug_Daten)
convert_column_to_binary_factor <- function(data, column_name) {
data <- data %>%
mutate(faulty_factor = as.factor(data$column_name))
return(data)
}
Fahrzeug_Daten <- Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"]
Fahrzeug_Daten <- convert_column_to_binary_factor(as.data.frame(Fahrzeug_Daten), "Fehlerhaft")
convert_column_to_binary_factor <- function(data, column_name) {
data <- data %>%
mutate(faulty_factor = as.factor(data$column_name))
return(data)
}
Fahrzeug_Daten <- Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"]
Fahrzeug_Daten <- convert_column_to_binary_factor(as.data.frame(Fahrzeug_Daten), Fehlerhaft)
convert_column_to_binary_factor <- function(data, column_name) {
data <- data %>%
mutate(faulty_factor = as.factor(column_name))
return(data)
}
Fahrzeug_Daten <- Fahrzeugdaten_all["Fahrzeuge_OEM1_Typ11"]
Fahrzeug_Daten <- convert_column_to_binary_factor(as.data.frame(Fahrzeug_Daten), Fehlerhaft)
help("set_names")
library(tidyverse)
library(fs)
library(stringr)
library(data.table)
help("set_names")
library(tidyverse)
library(fs)
library(stringr)
library(data.table)
# 1.0 Importing Data ----
# 1.1 Getting all the File Paths ----
Geodaten_paths <- fs::dir_ls("Data/Geodaten", glob = "*.csv")
Fahrzeug_paths <- fs::dir_ls("Data/Fahrzeug", glob = "*OEM1*")
#TODO Remove Fehleranalyse from List
Komponente_paths <- fs::dir_ls("Data/Komponente", glob = "*K1*|*K3*")
Motor_Teile_IDs <- sprintf('%0.2d', 2:10)
Schaltung_Teile_IDs <- 21:27
Relevante_Teile_IDs <- c(Motor_Teile_IDs, Schaltung_Teile_IDs)
Einzelteilfilter <- ""
for (ID in Relevante_Teile_IDs) {
Einzelteilfilter <- paste(Einzelteilfilter, "*", toString(ID), "*|", sep="")
}
Einzelteilfilter <- str_sub(Einzelteilfilter, end = -2)
Einzelteil_paths <- fs::dir_ls("Data/Einzelteil", glob = Einzelteilfilter)
Zulassungen_paths <- fs::dir_ls("Data/Zulassungen")
# 1.2 Importing the Data from their directories and naming them
Geodaten_all <- list()
Fahrzeugdaten_all <- list()
Komponentendaten_all <- list()
Einzelteildaten_all <- list()
#TODO function für die ganzen for loops schreiben und lapply anwenden
#weil schöner
for (i in seq_along(Geodaten_paths)) {
Geodaten_all[[i]] <- fread(Geodaten_paths[[i]])
}
Geodaten_all <- set_names(Geodaten_all, str_sub(Geodaten_paths, start = 15, end = -5))
for (i in seq_along(Fahrzeug_paths)) {
data <- fread(Fahrzeug_paths[[i]], header=TRUE)
assign(str_sub(Fahrzeug_paths[[i]], start = 15, end = -5), data)
}
View(Fahrzeuge_OEM1_Typ11)
class(Fahrzeuge_OEM1_Typ11)
convert_column_to_binary_factor <- function(data, column_name) {
data <- data %>%
mutate(faulty_factor = as.factor(column_name))
return(data)
}
Fahrzeug_Daten <- convert_column_to_binary_factor(Fahrzeuge_OEM1_Typ11, Fehlerhaft)
convert_column_to_binary_factor <- function(data, column_name) {
data <- data %>%
mutate(faulty_factor = as.factor(column_name))
return(data)
}
Fahrzeug_Daten <- convert_column_to_binary_factor(Fahrzeuge_OEM1_Typ11, Fahrzeuge_OEM1_Typ11$Fehlerhaft)
View(Fahrzeug_Daten)
glimpse(Fahrzeug_Daten)
help("fread")
Geodaten_paths
help("read.csv2")
View(Fahrzeuge_OEM1_Typ11_Fehleranalyse)
library(tidyverse)
library(fs)
library(stringr)
library(data.table)
# 1.0 Importing Data ----
# 1.1 Getting all the File Paths ----
Geodaten_paths <- fs::dir_ls("Data/Geodaten", glob = "*.csv")
Fahrzeug_paths <- fs::dir_ls("Data/Fahrzeug", glob = "*OEM1*")
#TODO Remove Fehleranalyse from List
Komponente_paths <- fs::dir_ls("Data/Komponente", glob = "*K1*|*K3*")
Motor_Teile_IDs <- sprintf('%0.2d', 1:10)
Schaltung_Teile_IDs <- 21:27
Relevante_Teile_IDs <- c(Motor_Teile_IDs, Schaltung_Teile_IDs)
Einzelteilfilter <- ""
for (ID in Relevante_Teile_IDs) {
Einzelteilfilter <- paste(Einzelteilfilter, "*", toString(ID), "*|", sep="")
}
Einzelteilfilter <- str_sub(Einzelteilfilter, end = -2)
Einzelteil_paths <- fs::dir_ls("Data/Einzelteil", glob = Einzelteilfilter)
Zulassungen_paths <- fs::dir_ls("Data/Zulassungen")
# 1.2 Importing the Data from their directories and naming them
#TODO function für die ganzen for loops schreiben und lapply anwenden
#weil schöner
for (i in seq_along(Geodaten_paths)) {
data<- fread(Geodaten_paths[[i]])
assign(str_sub(Geodaten_paths[[i]], start = 15, end = -5), data)
}
for (i in seq_along(Fahrzeug_paths)) {
data <- fread(Fahrzeug_paths[[i]], header=TRUE)
assign(str_sub(Fahrzeug_paths[[i]], start = 15, end = -5), data)
}
for (i in seq_along(Komponente_paths)) {
if (Komponente_paths[[i]] == "Data/Komponente/Komponente_K1DI2.txt") {
Komponentendaten_all[[i]] <- fread(Komponente_paths[[i]], header=TRUE, sep = "\t", sep2="\\", quote="")
} else if (Komponente_paths[[i]] == "Data/Komponente/Komponente_K3AG2.txt") {
data <- fread(Komponente_paths[[i]], sep = "\\", quote="")
} else {
data <- fread(Komponente_paths[[i]], quote="")
}
assign(str_sub(Komponente_paths[[i]], start = 17, end = -5), data)
}
View(Komponente_K1BE2)
View(Bestandteile_Fahrzeuge_OEM1_Typ11)
View(Komponente_K1BE2)
View(Komponente_K3SG1)
library(tidyverse)
library(fs)
library(stringr)
library(data.table)
# 1.0 Importing Data ----
# 1.1 Getting all the File Paths ----
Geodaten_paths <- fs::dir_ls("Data/Geodaten", glob = "*.csv")
Fahrzeug_paths <- fs::dir_ls("Data/Fahrzeug", glob = "*OEM1*")
#TODO Remove Fehleranalyse from List
Komponente_paths <- fs::dir_ls("Data/Komponente", glob = "*K1*|*K3*")
Motor_Teile_IDs <- sprintf('%0.2d', 1:10)
Schaltung_Teile_IDs <- 21:27
Relevante_Teile_IDs <- c(Motor_Teile_IDs, Schaltung_Teile_IDs)
Einzelteilfilter <- ""
for (ID in Relevante_Teile_IDs) {
Einzelteilfilter <- paste(Einzelteilfilter, "*", toString(ID), "*|", sep="")
}
Einzelteilfilter <- str_sub(Einzelteilfilter, end = -2)
Einzelteil_paths <- fs::dir_ls("Data/Einzelteil", glob = Einzelteilfilter)
Zulassungen_paths <- fs::dir_ls("Data/Zulassungen")
# 1.2 Importing the Data from their directories and naming them
#TODO function für die ganzen for loops schreiben und lapply anwenden
#weil schöner
for (i in seq_along(Geodaten_paths)) {
data<- fread(Geodaten_paths[[i]])
assign(str_sub(Geodaten_paths[[i]], start = 15, end = -5), data)
}
for (i in seq_along(Fahrzeug_paths)) {
data <- fread(Fahrzeug_paths[[i]], header=TRUE)
assign(str_sub(Fahrzeug_paths[[i]], start = 15, end = -5), data)
}
for (i in seq_along(Komponente_paths)) {
if (Komponente_paths[[i]] == "Data/Komponente/Komponente_K1DI2.txt") {
Komponentendaten_all[[i]] <- fread(Komponente_paths[[i]], header=TRUE, sep = "\t", sep2="\\", quote="")
} else if (Komponente_paths[[i]] == "Data/Komponente/Komponente_K3AG2.txt") {
data <- fread(Komponente_paths[[i]], sep = "\\", quote="")
} else {
data <- fread(Komponente_paths[[i]], quote="")
}
assign(str_sub(Komponente_paths[[i]], start = 17, end = -5), data)
}
for (i in seq_along(Einzelteil_paths)) {
data <- fread(Einzelteil_paths[[i]])
assign(str_sub(Einzelteil_paths[[i]], start = 17, end = -5), data)
}
View(data)
